#!/usr/bin/env node
'use strict';
const program = require('commander');
const path = require('path');
const fs = require('fs');
const os = require('os');
const configPath = path.join(os.homedir(), '.honeycomb.json');

let globalConfig;

program
  .parse(process.argv);

try {
  globalConfig = require(configPath);
} catch (e) {
  if (e.code === 'MODULE_NOT_FOUND') {
    console.error('file not found:', configPath);
  } else if (e.name === 'SyntaxError') {
    console.error(configPath, 'must be actual JSON');
  } else {
    console.error(e);
  }
  process.exit(1);
}

if (program.args[0] && program.args[1]) {
  set(program.args[0], program.args[1]);
} else if (program.args[0]) {
  get(program.args[0]);
}

function get(key) {
  switch (key) {
    case 'registry':
      console.log(globalConfig.registry || '');
      break;
    default:
      console.log(`no config with key '${key}'`);
  }
}

function set(key, value) {
  switch (key) {
    case 'registry':
      globalConfig.registry = value;
      fs.writeFileSync(configPath, JSON.stringify(globalConfig, null, 2));
      break;
    default:
      console.log(`set key '${key}' not supported`);
  }
}
